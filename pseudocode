// This is the pseudocode to measure average latency and bandwidth using the simulator provided monitor output
//1.Variable initialization - total_latency,total_bytes, count are initialized
//2.Then it reads from the monitor output file which has the details of thr monitor output.Split the line into timestamp, transaction type, and data. Convert timestamp to integer
//3.It iterates using a for loop
//4.If txntype is Rd it searched for data and calculates latency by subtracting current with next entry
//5.If it is 'Wr' calculates the bytes transferres and is added to total_bytes
//6.Calculates the average latency by dividing total_latency by count.It also calculates the average bandwidth by dividing total_bytes by count
//7.Averagde latency and bandwidth and printed

#Initialize
total_latency = 0
total_bytes = 0
count = 0

#Read the monitor
with open('interface_monitor_output.txt', 'r') as file:
    lines= file.readlines()

#Iterate
for line in lines:
        timestamp, txn_type, data = line.split()
        timestamp = int(timestamp)
if txn_type == 'Rd':
 for next_line in lines:
 next_txn_type=='Data':
 next=int(next_line)
 latency=next-timestamp
 total_latency=total_latency+latency
 count+=1
break
else if txn_type == 'Wr': 
size=len(data)
total_bytes+=size
count+=1

#Calculate average
avg_latency=total_latency/count
avg bandwidth=total_bytes/count

#print final values
print("The average latency is:",avg_latency)
print("The average bandwidth is:",avg_bandwidth)

//Further the code can also be used to distinguish the CPU and IO transactions by introducing more variables to keep track of the latency and bandwidth separately
